// EndState_0Test.java
package uk.me.jockmacmad.jstate.state;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link EndState}.
* It contains one unit test case for the {@link EndState#getSingleton()} method.
*/
class EndState_0Test {

	/**
	 * Unit test for the {@link EndState#getSingleton()} method.
	 * @junit.Ignore
	 */
    @Test
    public void testGetSingleton() {
        assertNotNull(EndState.getSingleton());
    }
}

/**
*  EndState extends java/lang/Object with a constructor containing at least a single
 *  argument. It extends {@link java/lang/Object} in order to have the {@link java/lang/Object#equals} or {@link java/lang/Object#hashCode} and
 *  to generate a unique hash code of itself.
* @author :Don Stewart
* @since :0.0.1
**/
class EndState_1 extends java.lang.Object {
	
	/**
	 * Constructor of class EndState
	 * Generated by Eclipse
	 */
	private EndState(){
		throw new AssertionFailure("Do not call the static members in super class");
	}

	/**
	 * Two end states with the same state are equal.
	 * @junit.Ignore
	 * @since :0.0.1
	 */
	@Test
	@org.junit.Test
	public void testEqualsSelf() {
		assertTrue(EqualsBuilder.reflectionEquals(this));
	}

	/**
	 * Two end states with different state are unequal.
	 * @junit.Ignore
	 * @since :0.0.1
	 */
	@Test
	@org.junit.Test
	public void testNotEqualsSelf() {
		assertFalse(EqualsBuilder.reflectionEquals(null));
	}
}
