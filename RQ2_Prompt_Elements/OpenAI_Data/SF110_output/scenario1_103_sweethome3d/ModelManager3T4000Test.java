// ModelManagerTest.java
package com.eteks.sweethome3d.j3d;

import java.awt.EventQueue;
import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Area;
import java.awt.geom.GeneralPath;
import java.awt.geom.PathIterator;
import java.awt.geom.Rectangle2D;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Modifier;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.WeakHashMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.media.j3d.Appearance;
import javax.media.j3d.BoundingBox;
import javax.media.j3d.Bounds;
import javax.media.j3d.BranchGroup;
import javax.media.j3d.Geometry;
import javax.media.j3d.GeometryArray;
import javax.media.j3d.GeometryStripArray;
import javax.media.j3d.Group;
import javax.media.j3d.IndexedGeometryArray;
import javax.media.j3d.IndexedGeometryStripArray;
import javax.media.j3d.IndexedQuadArray;
import javax.media.j3d.IndexedTriangleArray;
import javax.media.j3d.IndexedTriangleFanArray;
import javax.media.j3d.IndexedTriangleStripArray;
import javax.media.j3d.Light;
import javax.media.j3d.Link;
import javax.media.j3d.Material;
import javax.media.j3d.Node;
import javax.media.j3d.QuadArray;
import javax.media.j3d.RenderingAttributes;
import javax.media.j3d.Shape3D;
import javax.media.j3d.SharedGroup;
import javax.media.j3d.Texture;
import javax.media.j3d.TextureAttributes;
import javax.media.j3d.Transform3D;
import javax.media.j3d.TransformGroup;
import javax.media.j3d.TransparencyAttributes;
import javax.media.j3d.TriangleArray;
import javax.media.j3d.TriangleFanArray;
import javax.media.j3d.TriangleStripArray;
import javax.vecmath.Color3f;
import javax.vecmath.Matrix3f;
import javax.vecmath.Point3d;
import javax.vecmath.Point3f;
import javax.vecmath.Vector3d;
import javax.vecmath.Vector3f;
import org.apache.batik.parser.AWTPathProducer;
import org.apache.batik.parser.ParseException;
import org.apache.batik.parser.PathParser;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import com.microcrowd.loader.java3d.max3ds.Loader3DS;
import com.sun.j3d.loaders.IncorrectFormatException;
import com.sun.j3d.loaders.Loader;
import com.sun.j3d.loaders.ParsingErrorException;
import com.sun.j3d.loaders.Scene;
import com.sun.j3d.loaders.lw3d.Lw3dLoader;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ModelManager}.
* It contains ten unit test cases for the {@link ModelManager#loadModel(Content)} method.
*/
class ModelManagerTest {

		@Test
		public void testLoadModel() throws IOException {
				ModelManager modelManager = new ModelManager();
				// Load a model with a valid URL
				BranchGroup modelNode = modelManager.loadModel(new URLContent(getClass().getResource("resources/test.obj")));
				assertEquals(1, modelNode.numChildren());
				assertTrue(modelNode.getChild(0) instanceof Shape3D);
				Shape3D shape = (Shape3D)modelNode.getChild(0);
				assertEquals(1, shape.numGeometries());
				assertTrue(shape.getGeometry() instanceof TriangleArray);
				assertEquals(3, ((TriangleArray)shape.getGeometry()).getVertexCount());
				assertEquals(3, ((TriangleArray)shape.getGeometry()).getVertexFormat());
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialIndexIndex());
				assertEquals(3, ((TriangleArray)shape.getGeometry()).getValidIndexCount());
				assertEquals(3, ((TriangleArray)shape.getGeometry()).getInitialCoordIndex());
				assertEquals(3, ((TriangleArray)shape.getGeometry()).getInitialColorIndex());
				assertEquals(3, ((TriangleArray)shape.getGeometry()).getInitialNormalIndex());
				assertEquals(3, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(0));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(1));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(2));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(3));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(4));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(5));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(6));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(7));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(8));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(9));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(10));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(11));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(12));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(13));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(14));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(15));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(16));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(17));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(18));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(19));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(20));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(21));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(22));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(23));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(24));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(25));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(26));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(27));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(28));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(29));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(30));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(31));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(32));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(33));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(34));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(35));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(36));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(37));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(38));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(39));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(40));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(41));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(42));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(43));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(44));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(45));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(46));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(47));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(48));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(49));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(50));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(51));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(52));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(53));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(54));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(55));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(56));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(57));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(58));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(59));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(60));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(61));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(62));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(63));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(64));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(65));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(66));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(67));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(68));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(69));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(70));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(71));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(72));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(73));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(74));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(75));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(76));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(77));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(78));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(79));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(80));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(81));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(82));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(83));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(84));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(85));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(86));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(87));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(88));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(89));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(90));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(91));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(92));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(93));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(94));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(95));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(96));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(97));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(98));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(99));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(100));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(101));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(102));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(103));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(104));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(105));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(106));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(107));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(108));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(109));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(110));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(111));
				assertEquals(0, ((TriangleArray)shape.getGeometry()).getInitialTexCoordIndex(112));
				assertEquals(