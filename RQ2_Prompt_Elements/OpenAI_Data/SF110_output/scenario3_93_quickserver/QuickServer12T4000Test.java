// QuickServerTest.java
package org.quickserver.net.server;

import java.io.*;
import java.lang.management.ManagementFactory;
import java.net.*;
import org.quickserver.net.*;
//v1.1
import org.quickserver.net.qsadmin.*;
//v1.2
import java.util.logging.*;
//v1.3
import org.quickserver.util.pool.*;
import org.quickserver.util.pool.thread.*;
import org.apache.commons.pool.*;
import org.quickserver.util.xmlreader.*;
import org.quickserver.sql.*;
//v1.3.1
import java.util.logging.Formatter;
import java.util.*;
//v1.3.2
import org.quickserver.util.*;
//v1.3.3
import org.quickserver.security.*;
//v1.4.0
import javax.net.ssl.*;
import javax.net.*;
import java.security.*;
import java.security.cert.*;
//v1.4.5
import java.nio.channels.*;
import org.quickserver.net.server.impl.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link QuickServer}.
* It contains ten unit test cases for the {@link QuickServer#getSSLSocketFactory(String)} method.
*/
class QuickServerTest {

	@Test
	void testGetSSLSocketFactory() throws IOException, NoSuchAlgorithmException, KeyManagementException {
		QuickServer myServer = new QuickServer();
		myServer.setSecure(true);
		myServer.setKeyStore("keystore.jks");
		myServer.setKeyStorePassword("password");
		myServer.setKeyStoreType("JKS");
		myServer.setTrustStore("truststore.jks");
		myServer.setTrustStorePassword("password");
		myServer.setTrustStoreType("JKS");
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledCipherSuites(new String[]{"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"});
		myServer.setEnabledProtocols(new String[]{"TLSv1.2"});
		myServer.setNeedClientAuth(true);
		myServer.setWantClientAuth(true);
		myServer.setProtocol("TLSv1.2");
		myServer.setCipherSuites(new String[]{"TLS_ECDHE_RSA