// ClientPoolTest.java
package org.quickserver.util.pool.thread;

import java.util.*;
import org.quickserver.util.pool.*;
import org.apache.commons.pool.*;
import org.quickserver.net.server.*;
import org.quickserver.util.xmlreader.PoolConfig;
import java.util.logging.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ClientPool}.
* It contains ten unit test cases for the {@link ClientPool#shouldNioWriteHappen()} method.
*/
class ClientPoolTest {

	@Test
	void testShouldNioWriteHappen() {
		ClientPool clientPool = new ClientPool();
		clientPool.setMaxThreadsForNioWrite(10);
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteStart();
		assertFalse(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(clientPool.shouldNioWriteHappen());
		clientPool.nioWriteEnd();
		assertTrue(